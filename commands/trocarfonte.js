const { SlashCommandBuilder, PermissionsBitField } = require('discord.js');
const fs = require('node:fs');
module.exports = {
    data: new SlashCommandBuilder()
        .setName('trocarfonte')
        .setDescription('Troca a fonte dos apelidos dos membros do servidor')
        .addIntegerOption(option =>
            option.setName('numero')
                .setDescription('Digite o identificador da fonte')
                .setRequired(true)
        ),
    async execute(interaction) {
        const guild = interaction.guild;
        const membros = await guild.members.fetch();
        const respostas = [];
        for (const membro of membros.values()) {
            console.log(membro.nickname);
            var negado;
            if (!membro.permissions.has(PermissionsBitField.Flags.Administrator)) {
                var userNumber = interaction.options.getInteger('numero');
                const lastOptionFile = './lastOption.json';
                fs.writeFileSync(lastOptionFile, JSON.stringify(userNumber));
                if (userNumber < 0 || userNumber > 3) {
                    respostas.push('N√£o existe fonte para este input!');
                    negado = 1;
                    return;
                }
                var replacements = {};
                if (userNumber == 1) {
                    replacements = {
                        a: 'ùêö', b: 'ùêõ', c: 'ùêú', d: 'ùêù', e: 'ùêû', f: 'ùêü', g: 'ùê†', h: 'ùê°', i: 'ùê¢', j: 'ùê£',
                        k: 'ùê§', l: 'ùê•', m: 'ùê¶', n: 'ùêß', o: 'ùê®', p: 'ùê©', q: 'ùê™', r: 'ùê´', s: 'ùê¨', t: 'ùê≠',
                        u: 'ùêÆ', v: 'ùêØ', w: 'ùê∞', x: 'ùê±', y: 'ùê≤', z: 'ùê≥',
                        A: 'ùêÄ', B: 'ùêÅ', C: 'ùêÇ', D: 'ùêÉ', E: 'ùêÑ', F: 'ùêÖ', G: 'ùêÜ', H: 'ùêá', I: 'ùêà', J: 'ùêâ',
                        K: 'ùêä', L: 'ùêã', M: 'ùêå', N: 'ùêç', O: 'ùêé', P: 'ùêè', Q: 'ùêê', R: 'ùêë', S: 'ùêí', T: 'ùêì',
                        U: 'ùêî', V: 'ùêï', W: 'ùêñ', X: 'ùêó', Y: 'ùêò', Z: 'ùêô',
                        '1': 'ùüè', '2': 'ùüê', '3': 'ùüë', '4': 'ùüí', '5': 'ùüì', '6': 'ùüî', '7': 'ùüï', '8': 'ùüñ', '9': 'ùüó', '0': 'ùüé'
                    };
                } else if (userNumber == 2) {
                    replacements = {
                        a: 'ùóÆ', b: 'ùóØ', c: 'ùó∞', d: 'ùó±', e: 'ùó≤', f: 'ùó≥', g: 'ùó¥', h: 'ùóµ', i: 'ùó∂', j: 'ùó∑',
                        k: 'ùó∏', l: 'ùóπ', m: 'ùó∫', n: 'ùóª', o: 'ùóº', p: 'ùóΩ', q: 'ùóæ', r: 'ùóø', s: 'ùòÄ', t: 'ùòÅ',
                        u: 'ùòÇ', v: 'ùòÉ', w: 'ùòÑ', x: 'ùòÖ', y: 'ùòÜ', z: 'ùòá',
                        A: 'ùóî', B: 'ùóï', C: 'ùóñ', D: 'ùóó', E: 'ùóò', F: 'ùóô', G: 'ùóö', H: 'ùóõ', I: 'ùóú', J: 'ùóù',
                        K: 'ùóû', L: 'ùóü', M: 'ùó†', N: 'ùó°', O: 'ùó¢', P: 'ùó£', Q: 'ùó§', R: 'ùó•', S: 'ùó¶', T: 'ùóß',
                        U: 'ùó®', V: 'ùó©', W: 'ùó™', X: 'ùó´', Y: 'ùó¨', Z: 'ùó≠',
                        '1': 'ùü≠', '2': 'ùüÆ', '3': 'ùüØ', '4': 'ùü∞', '5': 'ùü±', '6': 'ùü≤', '7': 'ùü≥', '8': 'ùü¥', '9': 'ùüµ', '0': 'ùü¨'
                    }
                    //O discord n√£o suporta o item 3
                } else if (userNumber == 3) {
                    replacements = {
                        a: 'ùí∂', b: 'ùí∑', c: 'ùí∏', d: 'ùíπ', e: 'ùëí', f: 'ùíª', g: 'ùëî', h: 'ùíΩ', i: 'ùíæ', j: 'ùíø',
                        k: 'ùìÄ', l: 'ùìÅ', m: 'ùìÇ', n: 'ùìÉ', o: 'ùëú', p: 'ùìÖ', q: 'ùìÜ', r: 'ùìá', s: 'ùìà', t: 'ùìâ',
                        u: 'ùìä', v: 'ùìã', w: 'ùìå', x: 'ùìç', y: 'ùìé', z: 'ùìè',
                        A: 'ùíú', B: 'ùêµ', C: 'ùíû', D: 'ùíü', E: 'ùê∏', F: 'ùêπ', G: 'ùí¢', H: 'ùêª', I: 'ùêº', J: 'ùí•',
                        K: 'ùí¶', L: 'ùêø', M: 'ùëÄ', N: 'ùí©', O: 'ùí™', P: 'ùí´', Q: 'ùí¨', R: 'ùëÖ', S: 'ùíÆ', T: 'ùíØ',
                        U: 'ùí∞', V: 'ùí±', W: 'ùí≤', X: 'ùí≥', Y: 'ùí¥', Z: 'ùíµ',
                        '1': 'ùü£', '2': 'ùü§', '3': 'ùü•', '4': 'ùü¶', '5': 'ùüß', '6': 'ùü®', '7': 'ùü©', '8': 'ùü™', '9': 'ùü´', '0': 'ùü¢'
                    };
                };
                try {
                    if (userNumber == 0) {
                        if(membro.nickname){
                        membro.setNickname(null);
                        respostas.push(`Apelido de ${membro.user.tag} removido!`);
                        }
                    } else {
                        if (membro.nickname == null) {
                            if (membro.user.tag.includes('#')) {
                                const listaString = membro.user.tag.split('#');
                                var nomeMembro = listaString[0];
                            } else {
                                var nomeMembro = membro.user.tag;
                            }
                            console.log(nomeMembro);
                            const formattedString = nomeMembro.replace(/[a-zA-Z]/g, char => replacements[char] || char);
                            membro.setNickname(formattedString);
                        } else {
                            const nickMembro = membro.nickname;
                            const formattedString = nickMembro.replace(/[a-zA-Z]/g, char => replacements[char] || char);
                            membro.setNickname(formattedString);
                        }
                    }
                } catch (error) {
                    console.error(`Erro ao trocar apelido para ${membro.user.tag}: ${error}`);
                }
            } else {
                respostas.push(`N√£o foi poss√≠vel trocar a fonte de ${membro.user.tag} porque ele √© um administrador!`)
            };
        };
        if (negado != 1) {
            respostas.push(`Apelidos alterados com sucesso!`);
        }
        if(interaction){
        await interaction.reply(respostas.join('\n'));
        }
    },
};